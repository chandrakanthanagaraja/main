{
	"name": "ActivitiesInDataFlowToLoadFactTable",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "DimCustomer"
				},
				{
					"name": "DimStore"
				},
				{
					"name": "DimProdCatSubCat"
				},
				{
					"name": "DimDate"
				},
				{
					"name": "StageTransaction"
				}
			],
			"sinks": [
				{
					"name": "SinkFactTable"
				}
			],
			"transformations": [
				{
					"name": "JoinDimCustomer"
				},
				{
					"name": "JoinDimProdCatSubCat"
				},
				{
					"name": "JoinDimDate"
				},
				{
					"name": "JoinDimStore"
				},
				{
					"name": "DerivedColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          customer_key as integer,",
				"          customer_id as integer,",
				"          customer_name as string,",
				"          DOB as string,",
				"          city_code as string,",
				"          gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> DimCustomer",
				"source(output(",
				"          store_key as integer,",
				"          store_type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> DimStore",
				"source(output(",
				"          prod_cat_subcat_key as integer,",
				"          product_cat_code as integer,",
				"          product_category as string,",
				"          product_subcat_code as integer,",
				"          product_subcategory as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> DimProdCatSubCat",
				"source(output(",
				"          DateKey as integer,",
				"          Date as date,",
				"          FullDateUK as string,",
				"          FullDateUSA as string,",
				"          DayOfMonth as string,",
				"          DaySuffix as string,",
				"          DayName as string,",
				"          DayOfWeekUSA as string,",
				"          DayOfWeekUK as string,",
				"          DayOfWeekInMonth as string,",
				"          DayOfWeekInYear as string,",
				"          DayOfQuarter as string,",
				"          DayOfYear as string,",
				"          WeekOfMonth as string,",
				"          WeekOfQuarter as string,",
				"          WeekOfYear as string,",
				"          Month as string,",
				"          MonthName as string,",
				"          MonthOfQuarter as string,",
				"          Quarter as string,",
				"          QuarterName as string,",
				"          Year as string,",
				"          YearName as string,",
				"          MonthYear as string,",
				"          MMYYYY as string,",
				"          FirstDayOfMonth as date,",
				"          LastDayOfMonth as date,",
				"          FirstDayOfQuarter as date,",
				"          LastDayOfQuarter as date,",
				"          FirstDayOfYear as date,",
				"          LastDayOfYear as date,",
				"          IsHolidayUSA as boolean,",
				"          IsWeekday as boolean,",
				"          HolidayUSA as string,",
				"          IsHolidayUK as boolean,",
				"          HolidayUK as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> DimDate",
				"source(output(",
				"          transaction_id as string,",
				"          cust_id as string,",
				"          tran_date as string,",
				"          prod_subcat_code as string,",
				"          prod_cat_code as string,",
				"          Qty as string,",
				"          Rate as string,",
				"          Tax as string,",
				"          total_amt as string,",
				"          Store_type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> StageTransaction",
				"StageTransaction, DimCustomer join(toInteger(cust_id) == customer_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinDimCustomer",
				"JoinDimCustomer, DimProdCatSubCat join(toInteger(prod_cat_code) == product_cat_code",
				"     && toInteger(prod_subcat_code) == product_subcat_code,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinDimProdCatSubCat",
				"JoinDimProdCatSubCat, DimDate join(toDate(tran_date, 'dd-MM-yyyy') == Date,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinDimDate",
				"JoinDimDate, DimStore join(StageTransaction@Store_type == DimStore@store_type,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinDimStore",
				"JoinDimStore derive(qty_int = toInteger(Qty),",
				"          rate_float = toFloat(Rate),",
				"          tax_float = toFloat(Tax),",
				"          total_amt_float = toFloat(total_amt)) ~> DerivedColumns",
				"DerivedColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          customer_key,",
				"          Prod_Cat_SubCat_Key = prod_cat_subcat_key,",
				"          Store_Key = store_key,",
				"          tran_date = DateKey,",
				"          Quantity = qty_int,",
				"          rate = rate_float,",
				"          tax = tax_float,",
				"          total_amount = total_amt_float",
				"     ),",
				"     format: 'table') ~> SinkFactTable"
			]
		}
	}
}