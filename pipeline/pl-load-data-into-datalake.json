{
	"name": "pl-load-data-into-datalake",
	"properties": {
		"description": "move data from various source into azure data lake gen 2 - use incremental load.",
		"activities": [
			{
				"name": "get-cfg-records",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "source_cfg",
						"value": "source.cfg table"
					}
				],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select * from source.cfg where enabled = 1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_cfg",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "get_sqldb_rows",
				"description": "get only the sqldb table type records",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "get-cfg-records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-cfg-records').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().source, 'SQLDB')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get_file_rows",
				"description": "get only the file type records",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "get-cfg-records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-cfg-records').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().source, 'File')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "foreach_sqldb_rec",
				"description": "for each sqldb type record",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get_sqldb_rows",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get_sqldb_rows').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(equals(item().load_type, 'incremental'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Full data copy",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": "\r\nselect * from @{item().source_table};",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "dataset_cfg",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DataSet_cfg_datalake_csv",
												"type": "DatasetReference",
												"parameters": {
													"filename": {
														"value": "@{item().dest_table}",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "copy_sqldb_type_data",
										"description": "copy sqldb type data from source i.e. sql server to sink i.e. data lake gen 2",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "select * from @{item().source_table} where convert(datetime, @{item().watermark_col}, 105) > convert(datetime, '@{item().watermark_val}')",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "dataset_cfg",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DataSet_cfg_datalake_csv",
												"type": "DatasetReference",
												"parameters": {
													"filename": "@{item().dest_table}"
												}
											}
										]
									},
									{
										"name": "dataflow_update_watermark_val",
										"type": "ExecuteDataFlow",
										"dependsOn": [
											{
												"activity": "copy_sqldb_type_data",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataflow": {
												"referenceName": "update_watermark_value",
												"type": "DataFlowReference",
												"parameters": {
													"file_name": {
														"value": "'@{item().dest_table}'",
														"type": "Expression"
													},
													"watermark_field": {
														"value": "'@{item().watermark_col}'",
														"type": "Expression"
													},
													"source_data_date_format": {
														"value": "'@{item().source_data_date_format}'",
														"type": "Expression"
													}
												},
												"datasetParameters": {
													"source1": {
														"filename": {
															"value": "@{item().dest_table}",
															"type": "Expression"
														}
													}
												}
											},
											"compute": {
												"coreCount": 8,
												"computeType": "General"
											},
											"traceLevel": "Fine"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2022-08-30T02:00:31Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}