{
	"name": "pl_ingest_data_into_adls",
	"properties": {
		"activities": [
			{
				"name": "Get config records",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "\nselect * from dbo.cfg where enabled = 1;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azure_edwdb",
						"type": "DatasetReference",
						"parameters": {
							"edw_table_name": "cfg",
							"edw_schema_name": "dbo"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter for sqldb records",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get config records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get config records').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().source, 'SQLDB')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter for non sqldb records",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get config records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get config records').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(equals(item().source, 'SQLDB'), false)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEachSQLDBRecs",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter for sqldb records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter for sqldb records').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "CheckForIncrementalLoad",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().load_type, 'incremental')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data to ADLS",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "select @{item().source_cols_for_staging} \nfrom @{item().source_table}\nwhere \nconvert(datetime, @{item().watermark_col}, 101) > \nconvert(datetime, '@{item().watermark_val}', 120);",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_vm_sqlserver",
												"type": "DatasetReference",
												"parameters": {
													"table_name": "@{item().source_table}",
													"schema_name": "dbo"
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_storageacct_stage",
												"type": "DatasetReference",
												"parameters": {
													"stage_file_name": "@{item().dest_table}"
												}
											}
										]
									},
									{
										"name": "data flow to update cfg watermark date",
										"type": "ExecuteDataFlow",
										"dependsOn": [
											{
												"activity": "Copy data to ADLS",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataflow": {
												"referenceName": "dataflow_activity_update_watermark_dt",
												"type": "DataFlowReference",
												"parameters": {
													"watermark_col_name": {
														"value": "@{item().watermark_col}",
														"type": "Expression"
													},
													"watermark_val_dt_fmt": {
														"value": "@{item().source_data_date_format}",
														"type": "Expression"
													}
												},
												"datasetParameters": {
													"LoadDataFromCSV": {
														"stage_file_name": "@{item().dest_table}"
													}
												}
											},
											"compute": {
												"coreCount": 8,
												"computeType": "General"
											},
											"traceLevel": "Fine"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}